def job_name = "${env.JOB_NAME}".split('/')[0]
def branch = "${env.JOB_NAME}".split('/')[1]
def pipelineDirectory = "/var/jenkins_home/pipeline-scripts"

pipeline {
    agent any
    tools {
        maven "Maven 3.6.3"
    }
    stages {
        stage("build project") {
            steps {
                echo "Java VERSION"
                sh 'java --version'
                echo "Maven VERSION"
                sh 'mvn --version'
                echo 'building project...'

                dir("${pipelineDirectory}/service-registry") {
                    sh(script: "mvn clean install", returnStatus: true) { status ->
                        if (status != 0) {
                            error "Maven build failed in service-registry"
                        }
                    }
                }

                dir("${pipelineDirectory}/configserver") {
                    sh(script: "mvn clean install", returnStatus: true) { status ->
                        if (status != 0) {
                            error "Maven build failed in configserver"
                        }
                    }
                }

                dir("${pipelineDirectory}/apigateway") {
                    sh(script: "mvn clean install -DskipTests", returnStatus: true) { status ->
                        if (status != 0) {
                            error "Maven build failed in apigateway"
                        }
                    }
                }

                dir("${pipelineDirectory}/auth-service") {
                    sh(script: "mvn clean install -DskipTests", returnStatus: true) { status ->
                        if (status != 0) {
                            error "Maven build failed in auth-service"
                        }
                    }
                }

                dir("${pipelineDirectory}/productservice") {
                    sh(script: "mvn clean install -DskipTests", returnStatus: true) { status ->
                        if (status != 0) {
                            error "Maven build failed in productservice"
                        }
                    }
                }

                dir("${pipelineDirectory}/orderservice") {
                    sh(script: "mvn clean install -DskipTests", returnStatus: true) { status ->
                        if (status != 0) {
                            error "Maven build failed in orderservice"
                        }
                    }
                }

                dir("${pipelineDirectory}/paymentservice") {
                    sh(script: "mvn clean install -DskipTests", returnStatus: true) { status ->
                        if (status != 0) {
                            error "Maven build failed in paymentservice"
                        }
                    }
                }
            }
        }
    }
}
